<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="ListViewCommon.ttinclude" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="EntityName" #>
namespace <#=Namespace#>.ViewModels {
    public sealed class <#=EntityName#>ListViewModel {
		public int Id { get; set; }
<#foreach (var field in GetFields()) {
    var fileType = GetFieldType(field.FieldDefinition.Name);
#>
		public <#= fileType.GetFriendlyName() #> <#=field.Name #>{ get; set; }
<# } #>
    }
}
<#+

	private IEnumerable<ContentPartFieldDefinition> GetFields() {
        var columns = GetColumns(EntityName);
        var partDefinition = GetContentPartDefinition(EntityName);
        foreach (var col in columns) {
            var field = partDefinition.Fields.FirstOrDefault(f => f.Name == col.Name);
            if (field != null) {
                yield return field;
            }
        }
    }

#>