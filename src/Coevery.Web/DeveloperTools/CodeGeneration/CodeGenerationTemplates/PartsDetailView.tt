<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="Coevery.DeveloperTools" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Coevery.Core" #>
<#@ parameter type="System.Collections.Generic.IList<Coevery.DeveloperTools.FormDesigner.Models.Section>" name="SectionList" #>
<#@ import namespace="Coevery.Core.Common.Extensions" #>
<#@ import namespace="System.Linq" #>
<#@ parameter type="System.String" name="EntityName" #>
@using Coevery.Utility.Extensions

<div class="row-fluid view-mode">
<# foreach (var layoutSection in SectionList) { #>
<# var widths = layoutSection.SectionColumnsWidth.Split(':').ToArray(); #>
    <section>
        <header><h5><#= layoutSection.SectionTitle #></h5></header>
<# foreach (var row in layoutSection.Rows) { #>
<# int i = 0; #>
		<div class="data-row clearfix">
<# foreach (var column in row.Columns) { #>
<# string width = row.IsMerged ? "12" : widths[i++]; #>
			<div class="span<#=width#>">
<# if (column.Field != null) { #>
				@Display.DisplayField(part: Model.ContentPart, fieldName: "<#= column.Field.FieldName #>")
<# } #>
			</div>
<# } #>
		</div>
<# } #>
	</section>
<# } #>
	<div class="data-row clearfix">
        <div class="control controls">
			<a class="btn btn-small btn-primary"  href="@Url.Action("Edit", new {id = Model.ContentItem.Id})"><i class="icon-edit"></i>&nbsp;@T("Edit") </a>
            @{
                var returnUrl = Request.QueryString["returnUrl"];
            }
            @if (!String.IsNullOrWhiteSpace(returnUrl) && Request.IsLocalUrl(returnUrl))
            {
                <a class="btn btn-small"  href="@returnUrl">@T("Cancel")</a>
            }
        </div>
    </div>
</div>