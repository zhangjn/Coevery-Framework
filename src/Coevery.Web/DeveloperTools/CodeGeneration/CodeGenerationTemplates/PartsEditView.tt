<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="EntityDefinition.ttinclude" #>
<#@ assembly name="Coevery.DeveloperTools" #>
<#@ assembly name="System.Core" #>
<#@ parameter type="System.String" name="EntityName" #>
<#@ parameter type="System.Collections.Generic.IList<Coevery.DeveloperTools.FormDesigner.Models.Section>" name="SectionList" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Coevery.Core.Relationships.Settings" #>
@using Coevery.Utility.Extensions
@using Coevery.ContentManagement
@{
    var id = Guid.NewGuid().ToString();
	ContentPart part = Model.ContentPart;
<#	
	var partDefinition = GetContentPartDefinition(EntityName);
    var fields = partDefinition.Fields.Where(f => f.FieldDefinition.Name == "ReferenceField").ToList();
	if (fields.Count > 0) {
            foreach (var field in fields) {
                var fieldName = field.Name;#>
	part.SetFieldParameter("<#=fieldName#>", new { DropdownUrl = Url.Action("<#=fieldName #>Dropdown", "<#=EntityName #>")});
<# } #>
<# } #>
}
<div class="row-fluid edit-mode">
	@using (Html.BeginFormAntiForgeryPost(Url.Action("Edit", "<#=EntityName #>" , new { id = Model.ContentItem.Id, returnUrl = Request.QueryString["ReturnUrl"]}),
		FormMethod.Post, new {@class = "form-horizontal", id = id})) {
<# foreach (var layoutSection in SectionList) { #>
<# var widths = layoutSection.SectionColumnsWidth.Split(':').ToArray(); #>
		<fieldset>
			<legend>@T("<#= layoutSection.SectionTitle #>")</legend>
<# foreach (var row in layoutSection.Rows) { #>
<# int i = 0; #>
			<div class="data-row clearfix">
<# foreach (var column in row.Columns) { #>
<# string width = row.IsMerged ? "12" : widths[i++]; #>
				<div class="span<#=width#> control-group">
<# if (column.Field != null) { #>
					@Display.DisplayFieldEditor(part: Model.ContentPart, fieldName: "<#= column.Field.FieldName #>")
<# } #>
				</div>
<# } #>
			</div>
<# } #>
		</fieldset>
<# } #>
		<div class="data-row clearfix">
            <div class="control controls">
                <button type="submit" class="btn btn-small btn-primary">@T("Save changes")</button>
                @{
                    var returnUrl = Request.QueryString["returnUrl"];
                }
                @if (!String.IsNullOrWhiteSpace(returnUrl) && Request.IsLocalUrl(returnUrl))
                {
                    <a class="btn btn-small"  href="@returnUrl">@T("Cancel")</a>
                }
            </div>
        </div>
	}
</div>

@using (Script.Foot()) {
    <script>
        $('#@id').validate();
    </script>
}