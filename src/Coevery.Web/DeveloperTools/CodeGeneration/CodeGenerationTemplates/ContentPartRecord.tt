<#@ template debug="false" language="C#" #>
<#@ include file="EntityDefinition.ttinclude" #>
<#@ import namespace="Coevery.Core.OptionSet.Services" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="EntityName" #>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using Coevery.ContentManagement.Records;

namespace <#=Namespace#>.Models {
	[Table("<#=EntityName#>")]
    public class <#=EntityName#>PartRecord : ContentPartRecord {
<# 
	var definition = GetContentPartDefinition(EntityName);
    var optionSetFields = new List<ContentPartFieldDefinition>();
    if (definition != null) {
        foreach (var field in definition.Fields) {
            string fieldType;
            if (field.FieldDefinition.Name == "OptionSetField") {
                optionSetFields.Add(field);
				fieldType = field.Name + "Option?";
            }
            else {
				fieldType = GetFieldType(field.FieldDefinition.Name).GetFriendlyName();
            }
#>
		public virtual <#= fieldType #> <#=field.Name #> { get; set; }
<#
        }
    }
#>
    }
<#
    var optionSetService = Services.WorkContext.Resolve<IOptionSetService>();
    foreach (var field in optionSetFields) {
#>

    public enum <#=field.Name#>Option {
<#
        var optionSetId = int.Parse(field.Settings["OptionSetFieldSettings.OptionSetId"]);
        var options = optionSetService.GetOptionItems(optionSetId);
        foreach (var option in options) {
#>
		<#=option.Name#>,
<#
        }
#>
	}
<#
    }
#>
}

