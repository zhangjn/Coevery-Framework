@model Coevery.DeveloperTools.Projections.ViewModels.ProjectionEditViewModel
@using Coevery.Core.Common.ViewModels
@using Coevery.Projections.ViewModels

@{
    var visableTo = new List<SelectListItem>();
    visableTo.Add(new SelectListItem { Selected = Model.VisableTo == "All", Text = "All" });
    visableTo.Add(new SelectListItem { Selected = Model.VisableTo == "Me", Text = "Me" });
}
<header id="page-title">
    <h1 class="pull-left">View Detail <span>show view detail information</span></h1>
</header>
<section id="main-content">
    <div id="page-actions" class="clearfix">
        <div btn-actions>
            <button class="btn btn-small" data-ng-click="exit()">Back</button>
            <button class="btn btn-primary btn-small" data-cobusy="'saveview'" data-ng-click="saveAndView()">@T("Save")</button>
            <button class="btn btn-primary btn-small" data-cobusy="'saveview'" data-ng-click="saveAndBack()">@T("Save & Back")</button>
            <button class="btn btn-small" data-ng-click="preview()">@T("Preview")</button>
        </div>
    </div>
    @using (Html.BeginFormAntiForgeryPost(Url.Action("Edit", new {Id = Model.Id, ReturnUrl = Request.QueryString["ReturnUrl"]}),
        FormMethod.Post,
        new {@class = "form-horizontal", @name = "myForm", @ng_submit = "save()"})) {

        <div class="row-fluid">
            <div class=" form-container edit-mode">
                <div class="form-horizontal no-border">
                    <fieldset>
                        <legend>
                            <h5>@T("General Info")</h5>
                        </legend>

                        <section class="data-row control-group">
                            <div class="span6">
                                <label class="control-label">@T("Name")</label>
                                <div class="controls">
                                    @Html.TextBoxFor(m => m.ItemContentType, new {@class = "span12", @disabled = "disabled"})
                                    @Html.HiddenFor(m => m.ItemContentType)
                                    @Html.HiddenFor(m => m.IsDefault)
                                </div>
                            </div>
                            <div class="span6">
                                <label class="control-label required">@T("Display Name")</label>
                                <div class="controls errortips">
                                    @Html.TextBoxFor(m => m.DisplayName, new {@class = "span12", required = ""})
                                </div>
                            </div>
                        </section>

                        <section class="data-row control-group">
                            <div class="span6">
                                <label class="control-label">@T("Visable To")</label>
                                <div class="controls">
                                    @Html.DropDownListFor(m => m.VisableTo, visableTo, string.Empty, new {@class = "span12", @id = "visableto"})
                                </div>
                            </div>
                        </section>
                    </fieldset>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12 form-container edit-mode">
                <div class="form-horizontal no-border">
                    <fieldset>
                        <legend>
                            <h5>@T("Select Fields to Display")</h5>
                        </legend>
                        <select data-ng-picklist="@Json.Encode(Model.Fields)" data-source-list-label="Fields" data-use-default-model=true
                                data-target-list-label="Drag and drop to reorder" id="pickList" name="PickedFields">
                        </select>
                        @Html.HiddenFor(model => model.LayoutId)
                        @Html.HiddenFor(model => model.Layout.Category)
                        @Html.HiddenFor(model => model.Layout.Type)
                        @Html.HiddenFor(model => model.Layout.Form)
                    </fieldset>
                </div>
            </div>
        </div>
        @Display(Model.Form)
        <div class="row-fluid">
            <div class=" form-container edit-mode">
                <div class="form-horizontal no-border">
                    <fieldset>
                        <legend>
                            <h5>@T("Preview")</h5>
                        </legend>
                        <div class="row-fluid" data-ag-grid="gridOptions" data-ag-grid-name="previewList"></div>
                    </fieldset>
                </div>
            </div>
        </div>
    }
</section>
<script>
    $(function () {
        $("#main-content").css("margin-top", $("#page-title").outerHeight(true));
        $("#page-actions h1 span").attr("title", $("#page-actions h1 span").html());
    });
</script>

