@model Coevery.Fields.Fields.DatetimeField
@using System.Globalization
@using Coevery.Core.Shapes.Localization
@using Coevery.Fields.Settings;
@{
    var settings = Model.PartFieldDefinition.Settings.GetModel<DatetimeFieldSettings>();
    var required = settings.Required ? "required" : null;

    var cultureInfo = CultureInfo.GetCultureInfo(WorkContext.CurrentCulture);
    var dateTimeLocalization = WorkContext.Resolve<IDateTimeLocalization>();

    Func<DateTime?, string> FormatDateTime = date => date != null ? date.Value.ToString("g", cultureInfo) : null;
}

<label class="control-label title @required" for="@Html.FieldIdFor(m => m.Value)">@Model.DisplayName</label>
<div class="control controls input-prepend errortips" data-co-datetime-picker="datetime">
    <span class="add-on">
        <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
    </span>
    <input class="date" type="text"
           id="@Html.FieldIdFor(m => m.Value)"
           name="@Html.FieldNameFor(m => m.Value)"
           value="@FormatDateTime(Model.Value)"
           data-format="@dateTimeLocalization.LongDateTimeFormat.Text"
           data-date-weekstart="@dateTimeLocalization.FirstDay"
           @if (required != null) { <text> required data-msg-required="Please fill this field!" </text>   }
           @if (!string.IsNullOrWhiteSpace(settings.HelpText)) { <text> helper:text='@settings.HelpText' </text>   } />
    @Html.ValidationMessageFor(m => m.Value)
</div>

@Display(New.BootstrapDatePickerLocalization())