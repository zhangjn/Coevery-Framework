@model Coevery.DeveloperTools.EntityManagement.ViewModels.EditTypeViewModel
<header id="page-title">
    <h1 class="pull-left">@T("New Entity") <span>Create a new entity</span></h1>
</header>

<section id="main-content" style="margin-top: 47px">
    <div id="page-actions" class="clearfix">
        <div btn-actions>
            <button type="button" class="btn btn-small" data-ng-click="exit()">Back</button>
            <button type="button" class="btn btn-small btn-primary" data-cobusy="'saveentity'" data-ng-click="saveAndView()">Save</button>
            <button class="btn btn-small btn-primary" data-cobusy="'saveentity'" data-ng-click="saveAndBack()">Save & Back</button>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span12">
            <div class="form-horizontal">
                @using (Html.BeginFormAntiForgeryPost(Url.Action("Create", "Admin"), FormMethod.Post,
                    new {@class = "edit-mode", id = "myForm"})) {
                    @Html.ValidationSummary()
                    <fieldset>
                        <legend>General Information</legend>
                        <section class="data-row control-group">
                            <div class="span6">
                                <label class="control-label required" >@T("Name")</label>
                                <div class="controls errortips">
                                    @Html.TextBoxFor(m => m.Name, new {@class = "span12 required safename", autofocus = "autofocus"})
                                </div>
                            </div>
                            <div class="span6">
                                <span class="help-inline">@T("The code name of this entity.")</span>
                            </div>
                        </section>
                        <section class="data-row control-group">
                            <div class="span6">
                                <label class="control-label required" >@T("Display Name")</label>
                                <div class="controls errortips">
                                    @Html.TextBoxFor(m => m.DisplayName, new {@class = "span12", required = ""})
                                </div>
                            </div>
                            <div class="span6">
                                <span class="help-inline">@T("The name that user see on the UI.")</span>
                            </div>
                        </section>
                        <section class="data-row control-group">
                            <div class="span6">
                                <label class="control-label required" >@T("Plural Display Name")</label>
                                <div class="controls errortips">
                                    @Html.TextBoxFor(m => m.Settings["CollectionDisplayName"], new {@class = "span12 required", id = "PluralName"})
                                </div>
                            </div>
                            <div class="span6">
                                <span class="help-inline">@T("The plural name that user see on the UI.")</span>
                            </div>
                        </section>
                    </fieldset>
                }
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">
    $(function() {
        //Validation
        $.validator.addMethod("safename", function(value) {
            return (/^[A-Za-z]([0-9]|[-_]|[A-Za-z]){0,127}$/.test(value));
        }, "FieldName is not legal!");
        $.validator.classRuleSettings.safename = { safename: true };

        $("#myForm").validate({
            onkeyup: function(element) {
                if (element.type == "text") {
                    this.element(element);
                }
            },
            errorClass: "inputError"
        });

        //Auto get name
        var $name = $("#Name"),
            $displayName = $("#DisplayName"),
            $pluralName = $('#PluralName'),
            nameAltered = false,
            version = 0;

        $displayName.keyup(function() {
            nameAltered = $name.val() != $displayName.val();
        });

        $name.focusout(function() {
            var entityName = $name.val();
            if (nameAltered || !entityName) {
                return;
            }
            $displayName.val(entityName);
            getPluralName(entityName);
        });

        var getPluralName = function(entityName) {
            $.post("@Url.Action("EntityName", "Admin")", {
                    entityName: entityName,
                    version: ++version,
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()
                },
                function(data) {
                    if (version == data.version) {
                        $pluralName.val(data.pluralName);
                    }
                },
                "json"
            );
        };
    });
</script>