@using Coevery.Core.OptionSet.Settings
@model OptionSetFieldSettings
<section class="control-group data-row">
    <label class="control-label">@T("List mode")</label>
    <div class="controls">
        <select id="@Html.FieldIdFor(m => m.ListMode)" name="@Html.FieldNameFor(m => m.ListMode)">
            @Html.SelectOption(ListMode.Dropdown, Model.ListMode == ListMode.Dropdown, T("Dropdown list").ToString())
            @Html.SelectOption(ListMode.Radiobutton, Model.ListMode == ListMode.Radiobutton, T("Radio button list").ToString())
        </select>
    </div>
</section>

<section class="data-row control-group">
    <label class="control-label">
        @T("Options")
    </label>
    <div class="controls">
        <label class="checkbox">               
            @Html.CheckBoxFor(m => m.IsUnique)
            @T("Is Unique")
        </label>
    </div>
</section>
@Html.HiddenFor(model => model.OptionSetId)

<div data-ng-controller="OptionItemsCtrl">
    <section class="row-fluid related-list">
        <header>
            <h5>Option Items</h5>
            <div class="btn-toolbar">
                <button class="btn btn-success btn-small" data-ng-click="add()">
                    <i class="icon-plus"></i>&nbsp;Add
                </button>
            </div>
        </header>
        <div data-ag-grid="gridOptions" data-ag-grid-name="itemList"> </div>
    </section>

    <section id="deleteModal" class="modal hide fade" tabindex="-1">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h3>Confirm</h3>
        </div>
        <div class="modal-body">
            <p>You really want to delete this item?</p>
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal">No</button>
            <button class="btn btn-primary" data-ng-click="deleteItem()">Yes</button>
        </div>
    </section>

    <section id="editModal" class="modal hide fade" tabindex="-1">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">×</button>
            <h3>Item</h3>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="control-group">
                    <label class="control-label" for="inputValue">Title Name</label>
                    <div class="controls">
                        <input type="hidden" data-ng-model="itemId" />
                        <input id="inputValue" type="text" data-ng-model="itemValue" />
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="inputIsSelectable">Is Selectable</label>
                    <div class="controls">
                        <label class="checkbox">
                            <input id="inputIsSelectable" type="checkbox" data-ng-model="itemSelectable" />
                        </label>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="inputWeight">Weight</label>
                    <div class="controls">
                        <input id="inputWeight" type="text" data-ng-model="itemWeight" />
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal">No</button>
            <button class="btn btn-primary" data-ng-click="editFunc()">Yes</button>
        </div>
    </section>
</div>

<script>
    function OptionItemsCtrl($rootScope, $scope, logger, $resource) {
        $scope.optionSetId = @Model.OptionSetId;
        var optionItemDataService = $resource(applicationBaseUrl + 'api/OptionSet/OptionItem/:OptionSetId',
            { OptionSetId: '@@OptionSetId' },
            { update: { method: 'PUT' } });
        
        var optionColumnDefs = [
            { name: 'Id', label: 'Id', sorttype: 'int', hidden: true, key: true },
            {
                name: 'Name',
                label: 'Value',
                formatter: $rootScope.cellLinkTemplate,
                formatoptions: { editRow: true }
            },
            { name: 'Selectable', label: 'Selectable', },
            { name: 'Weight', label: 'Weight', sorttype: 'int' }
        ];

        $scope.gridOptions = {
            url: "api/OptionSet/OptionItem/?optionSetId=" + $scope.optionSetId,
            colModel: optionColumnDefs
        };
        angular.extend($scope.gridOptions, $rootScope.defaultGridOptions);

        $scope.add = function() {
            $scope.itemValue = '';
            $scope.itemSelectable = true;
            $scope.editFunc = createItemFunc;
            $('#editModal').modal({
                backdrop: 'static',
                keyboard: true
            });
        };

        $scope.edit = function(id) {
            var item = $scope.itemList.getRow(id);
            $scope.itemId = item.Id;
            $scope.itemValue = item.Name;
            $scope.itemSelectable = item.Selectable;
            $scope.itemWeight = item.Weight;
            $scope.editFunc = editItemFunc;
            $('#editModal').modal({
                backdrop: 'static',
                keyboard: true
            });
        };

        function createItemFunc() {
            $('#editModal').modal('hide');
            optionItemDataService.save({
                    optionSetId: $scope.optionSetId,
                    name: $scope.itemValue,
                    selectable: $scope.itemSelectable,
                    weight: $scope.itemWeight
                }, function() {
                    $scope.getOptionItems();
                    logger.success("Create the item successful.");
                }, function(response) {
                    logger.error("Failed to add:\n" + response.data.Text);
                });
        }

        function editItemFunc() {
            $('#editModal').modal('hide');
            optionItemDataService.update({
                    id: $scope.itemId,
                    name: $scope.itemValue,
                    selectable: $scope.itemSelectable,
                    weight: $scope.itemWeight
                }, function() {
                    $scope.getOptionItems();
                    logger.success("Update the item successful.");
                }, function() {
                    logger.error("Failed to update the item.");
                });
        }

        $scope['delete'] = function(itemId) {
            var deleteItem = itemId || $scope.selectedItems.length > 0 ? $scope.selectedItems[0] : null;
            if (!deleteItem) return;
            optionItemDataService.delete({ Id: deleteItem }, function() {
                $scope.getOptionItems();
                logger.success("Delete the item successful.");
            }, function() {
                logger.error("Failed to delete the item.");
            });
        };

        $scope.getOptionItems = function() {
            $("#itemList").jqGrid('setGridParam', {
                datatype: "json"
            }).trigger('reloadGrid');
        };
    }
</script>