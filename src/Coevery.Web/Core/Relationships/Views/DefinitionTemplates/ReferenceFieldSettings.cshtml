@using System.Web.Mvc.Html
@using Coevery.Core.Relationships.Settings
@using Coevery.Mvc.Html
@using Newtonsoft.Json
@model Coevery.Core.Relationships.Settings.ReferenceFieldSettings
@{
    string disabled = string.Empty;
    if (Model.QueryId > 0) {
        disabled = "disabled='disabled'";
    }
}

<section class="control-group data-row">
    <label class="control-label required" for="@Html.FieldIdFor(m => m.ContentTypeName)">@T("Primary Entity")</label>
    <div class="controls errortips">
        <select id="@Html.FieldIdFor(m => m.ContentTypeName)" @disabled name="@Html.FieldNameFor(m => m.ContentTypeName)" class="span12" required="">
            @foreach (var item in Model.Entities) {
                @Html.SelectOption(item.Name, item.Selected, item.Name)
            }
        </select>
    </div>
</section>
<section class="control-group data-row">
    <label class="control-label required" for="@Html.FieldIdFor(m => m.DisplayFieldName)">@T("Display Field")</label>
    <div class="controls errortips">
        <select id="@Html.FieldIdFor(m => m.DisplayFieldName)" name="@Html.FieldNameFor(m => m.DisplayFieldName)" class="span12" required="">
        </select>
        <span class="help-block">@T("Only can select text type field.")</span>
    </div>
</section>
<section class="control-group data-row">
    <label class="control-label required">
        @T("Relation Name")
    </label>
    <div class="controls errortips">
        <input type="text" class="span12" required="" name="@Html.NameFor(m => m.RelationshipName)" value="@Model.RelationshipName" @disabled />
    </div>
</section>
<section class="control-group data-row">
    <label class="control-label required">
        @T("What to do if the referenced record is deleted?")
    </label>
    <div class="controls errortips">
        <select id="@Html.FieldIdFor(m => m.DeleteAction)" name="@Html.FieldNameFor(m => m.DeleteAction)" class="span12" required="">
            @Html.SelectOption(Model.DeleteAction, DeleteAction.NotAllowed, T("Don’t allow deletion of the referenced record").Text)
            @Html.SelectOption(Model.DeleteAction, DeleteAction.Clear, T("Clear the value of this field").Text)
            @Html.SelectOption(Model.DeleteAction, DeleteAction.Cascade, T("Delete this record also").Text)
        </select>
    </div>
</section>
<section class="control-group data-row">
    <label class="control-label">
        @T("Options")
    </label>
    <div class="controls">
        <label class="checkbox">
            @Html.CheckBoxFor(m => m.DisplayAsLink)
            @T("Display as link")
        </label>
        <label class="checkbox">               
            @Html.CheckBoxFor(m => m.IsUnique)
            @T("Is Unique")
        </label>
    </div>
</section>
@if (Model.RelationshipId > 0) {
    @Html.HiddenFor(model => model.RelationshipId)
    @Html.HiddenFor(m => m.QueryId)
    @Html.HiddenFor(m => m.ContentTypeName)
    @Html.HiddenFor(model => model.RelationshipName)
}

<script>
    (function() {
        var entity = $('#@Html.FieldIdFor(m => m.ContentTypeName)'),
            field = $('#@Html.FieldIdFor(m => m.DisplayFieldName)'),
            entities = @Html.Raw(JsonConvert.SerializeObject(Model.Entities));

        var setFields = function() {
            var selectedEntity = entity.val(),
                fields;

            field.empty();
            $.each(entities, function() {
                if (this.Name == selectedEntity) {
                    fields = this.Fields;
                    return false;
                }
            });
            if (fields) {
                $.each(fields, function() {
                    field.append('<option value="' + this + '">' + this + '</option>');
                });
            }
        };

        entity.change(function() {
            setFields();
        });

        setFields();
        field.val('@Model.DisplayFieldName');
    })();
</script>