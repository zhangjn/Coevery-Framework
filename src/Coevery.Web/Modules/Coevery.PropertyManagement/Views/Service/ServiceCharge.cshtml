@model ServiceChargeCreateViewModel
@using Coevery.PropertyManagement.ViewModels
@using Coevery.Utility.Extensions
@{
    Layout.Title = "维修费用结算";
    Style.Require("jqGrid");
    Style.Require("jqGridCustom");
    Script.Require("jqGrid");
    Script.Require("jqGrid_i18n");
}

<div class="row-fluid edit-mode">

    <fieldset>
        <legend>@T("基本信息")</legend>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">维修单号</label>
                <div class="controls">
                    @Html.TextBox("VoucherNo", @Model.VoucherNo, new
                        {
                            @readonly = true,
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">单据日期</label>
                <div class="controls">
                    <div class="input-prepend date-text span12" data-co-datetime-picker="date">
                        <span class="add-on">
                            <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                        </span>
                        @Html.TextBox("BeginDate", DateTime.Now.ToString("MM/dd/yyyy"), new Dictionary<string, object>
                        {
                            {"required", ""},
                            {"class", "date"},
                            {"data-msg-required", "开始时间！"}
                        })
                    </div>
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">维修地址</label>
                <div class="controls">
                    @Html.TextBox("Address", @Model.Address, new
                        {
                            @readonly = true,
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">业主</label>
                <div class="controls">
                    @Html.TextBox("OwnerName", @Model.OwnerName, new
                        {
                            @readonly = true,
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">电话</label>
                <div class="controls">
                    @Html.TextBox("Mobile", @Model.Mobile, new
                        {
                            @readonly = true,
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">故障描述</label>
                <div class="controls">
                    @Html.TextBox("FaultDescription", @Model.FaultDescription, new
                        {
                            @readonly = true,
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">接收时间</label>
                <div class="controls">
                    @Html.TextBox("ReceivedDate", @Model.ReceivedDate, new
                        {
                            @readonly = true,
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">维修人员</label>
                <div class="controls">
                    @Html.TextBox("ServicePersonName", @Model.OwnerName, new
                    {
                        @readonly = true,
                        @class = "span12"
                    })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">维修费用</label>
                <div class="controls">
                    @Html.TextBox("ServiceCharge", "", new
                        {
                            @class = "span12"
                        })
                </div>
            </div>
        </div>
        <div class="data-row clearfix">
            <div class="span12 control-group">
                <label class="title control-label">详细材料列表</label>
                <div class="control controls">
                    <div class="btn-toolbar">
                        <button id="btnReturnMaterial" class="btn btn-small"><i class="icon-trash"></i>&nbsp;退货</button>
                       
                    </div>
                    <table id="itemGrid"></table>
                </div>
            </div>
        </div>
    </fieldset>


    <div class="data-row clearfix">
        <div class="control controls">
            <button id="btnSubmit" class="btn btn-small btn-primary">@T("结算")</button>
            @{
                var returnUrl = Request.QueryString["returnUrl"];
            }
            @if (!String.IsNullOrWhiteSpace(returnUrl) && Request.IsLocalUrl(returnUrl))
            {
                <a class="btn btn-small" href="@returnUrl">@T("取消")</a>
            }
        </div>
    </div>

</div>

<div id="material-modal" class="modal large" style="visibility: hidden;" tabindex="-1">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>选择材料</h3>
    </div>
    <div class="modal-body">
        <table id="material-grid"></table>
        <section id="material-pager"></section>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-ok">@T("OK")</button>
        <button type="button" data-dismiss="modal" class="btn">@T("Cancel")</button>
    </div>
</div>

<div id="preview-modal" class="modal hide large" tabindex="-1">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>预览</h3>
    </div>
    <div class="modal-body" id="print-content">
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-ok">@T("OK")</button>
        <button type="button" data-dismiss="modal" class="btn">@T("Cancel")</button>
    </div>
</div>
<div id="EditReturnNumPreview-modal" class="modal hide large" tabindex="-1">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>退货</h3>
    </div>
    <div class="modal-body" id="return-content">
        <div class="data-row clearfix">
            <div class="control-group">
               退货数量:
                <input type="text" id="ReturnNum" name="ReturnNum" />
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-ok">@T("OK")</button>
        <button type="button" data-dismiss="modal" class="btn">@T("Cancel")</button>
    </div>
</div>
<script id="preview-template" type="text/x-handlebars-template">
    @Display.Partial(TemplateName: "Service/ServiceChargePreviewTemplate")
</script>

@Html.AntiForgeryToken()

@using (Script.Foot())
{
    <script type="text/javascript">
        $(function () {
            var grid = $('#itemGrid'),
                material = $('#material'),
                materialGridModal = $('#material-modal'),
                materialGrid = $('#material-grid'),
                btnReturnMaterial = $('#btnReturnMaterial'),
                previewModal = $('#preview-modal'),
                editReturnNumModal = $('#EditReturnNumPreview-modal'),
                btnDelete = $('#btnDelete'),
                btnSubmit = $('#btnSubmit'),
                index = 0,
                gridOptions = {
                    colModel: [
                        { name: 'MaterialId', hidden: true },
                      //  { name: 'SerialNo', label: '材料编号', sortable: false, resizable: false },
                        { name: 'Name', label: '材料名称', sortable: false, resizable: false },
                        { name: 'Brand', label: '品牌', sortable: false, resizable: false },
                        { name: 'Model', label: '规格型号', sortable: false, resizable: false },
                        { name: 'Unit', label: '单位', sortable: false, resizable: false },
                        { name: 'CostPrice', label: '成本价', sortable: false, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                        { name: 'Number', label: '数量', sortable: false, resizable: false },
                        { name: 'ReturnNumber', label: '退货数量', sortable: false, resizable: false }
                    ],
                    datatype: 'local',
                    height: '100%',
                    multiselect: true,
                    multiboxonly: true,
                    autowidth: true,
                    rowNum: 10000,
                    'cellsubmit': 'clientArray'
                };
            @{
    WriteLiteral("$.extend(gridOptions, {data:" + Html.Raw(Json.Encode(Model.InventoryDetailEntities)) + "})");
            }
            grid.jqGrid(gridOptions);
            grid.setGridParam({ onSelectRow: updateButtonStatus, onSelectAll: updateButtonStatus });
            updateButtonStatus();

            btnDelete.click(function () {
                var selectedIds = grid.getGridParam('selarrrow');
                if (selectedIds.length <= 0) {
                    return;
                }
                while (selectedIds.length) {
                    grid.delRowData(selectedIds[0]);
                }
                updateButtonStatus();
            });

            btnSubmit.click(function (e) {
                e.preventDefault();
                if ($('#ServiceCharge').val() == '') {
                    $.pnotify({ title: '提示', text: '维修费用不能为空！', type: 'notice' });
                    return;
                }
                var data = grid.getRowData();
               

                var source = $("#preview-template").html();
                var template = Handlebars.compile(source);
                var model = {
                    List: $.map(data, function (item, i) {
                        return {
                            Id: i + 1,
                            Material_SerialNo: item.SerialNo,
                            Material_Name: item.Name,
                            Material_Brand: item.Brand,
                            Material_Model: item.Model,
                            Material_Unit: item.Unit,
                            Number: item.Number - item.ReturnNumber,
                            ReturnNumber:item.ReturnNumber,
                            CostPrice: item.CostPrice,
                            Total: item.CostPrice * (item.Number - item.ReturnNumber)
                        };
                    })
                };
                var totalMoney = 0;
                for (var i in model.List) {
                    totalMoney = parseFloat($('#ServiceCharge').val()) + totalMoney;
                    totalMoney = model.List[i].Total + totalMoney;
                }

                $.extend(model, {
                    TotalMoney: parseFloat(totalMoney),
                    VoucherNo: $('#VoucherNo').val(),
                    ReceivedDate: $('#ReceivedDate').val(),
                    Address: $('#Address').val(),
                    Mobile: $('#Mobile').val(),
                    OwnerName: '@Model.OwnerName',
                    FaultDescription: '@Model.FaultDescription',
                    ServicePersonName: 'admin',
                    ServiceCharge: parseFloat($('#ServiceCharge').val())
                    
                });

                $('#preview-modal>.modal-body').html(template(model));

                previewModal.modal('show');
            });

            previewModal.find('.btn-ok').click(function () {
                var data = grid.getRowData(),
                    magicToken = $("input[name=__RequestVerificationToken]:first");
                $.ajax({
                    type: 'POST',
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    url: '@Url.Action("ServiceChargeCreate", "Service")',
                    data: JSON.stringify(
                       {
                           model: {
                               Id:'@Model.id',
                               ServiceCharge: $('#ServiceCharge').val(),
                               InventoryReturnDetailEntities: data
                           },
                __RequestVerificationToken: magicToken.val()
                        }
                    ),
                    success: function (response) {
                        if (response.Result) {
                            window.location.href = response.Url;
                        } else {
                            $.pnotify({ title: '提示', text: '超过库存数量！', type: 'Error' });
                            grid.trigger("reloadGrid");
                        }
                    },
                    error: function () {
                        $.pnotify({ title: '提示', text: '提交失败，请重试！', type: 'Error' });
                    }
                });
                previewModal.modal('hide');
            });

            function updateButtonStatus() {
                var selectedRowIds = grid.getGridParam('selarrrow');
                btnReturnMaterial.toggleClass('disabled', selectedRowIds.length != 1);
            }


            var materialGridOptions = {
                url: '@Url.Action("StockOutMaterialList", "Material", new { area = "Coevery.PropertyManagement" })',
                colModel: [{ "name": "SerialNo", "index": "SerialNo", "label": "材料编号", "sortable": true },
                       { "name": "Name", "index": "Name", "label": "材料名称", "sortable": true },
                       { "name": "Brand", "index": "Brand", "label": "品牌", "sortable": true },
                       { "name": "Model", "index": "Model", "label": "规格型号", "sortable": true },
                        { "name": "Unit", "index": "Unit", "label": "单位", "sortable": true },
                        { "name": "Remark", "index": "Remark", "label": "备注", "sortable": true },
                        { "name": "StockPrice", "index": "StockPrice", "label": "出库价", "sortable": true },
                        { "name": "Id", "hidden": true, "key": true }],
                pager: '#material-pager',
                rowNum: 50,
                sortname: '',
                sortorder: '',
                multiselect: false,
                scroll: 1,
                height: 300,
                autowidth: true,
                prmNames: {
                    page: 'page',
                    rows: 'pageSize',
                    sort: 'sortBy',
                    order: 'sortOrder'
                },
                datatype: 'json',
                mtype: 'POST',
                postData: {
                    __RequestVerificationToken: function () {
                        var magicToken = $("input[name=__RequestVerificationToken]").first();
                        if (magicToken.length == 0) {
                            return null;
                        } // no sense in continuing if form POSTS will fail
                        return magicToken.val();
                    }
                },
                viewrecords: true,
                recordpos: 'left',
                sortable: true,
                headertitles: true,
                jsonReader: {
                    page: 'page',
                    total: 'totalPages',
                    records: 'totalRecords',
                    repeatitems: false
                }
            };

            materialGrid.jqGrid(materialGridOptions);
            materialGridModal.addClass('hide');
            materialGridModal.css('visibility', 'visible');

            btnReturnMaterial.click(function (e) {
                e.preventDefault();
                editReturnNumModal.modal('show');
            });
            editReturnNumModal.find('.btn-ok').click(function () {
                var returnNum = $('#ReturnNum').val();
                var selectedRowIds = grid.jqGrid('getGridParam', 'selarrrow');
                if (selectedRowIds.length == 0) return;
                var numner = grid.jqGrid("getCell", selectedRowIds[0], 'Number');
                if (parseFloat(returnNum) > parseFloat(numner)) {
                    $.pnotify({ title: '提示', text: '退货数量应该小于领用数量！', type: 'notice' });
                    return;
                }
                grid.jqGrid('setCell', selectedRowIds[0], 'ReturnNumber', returnNum);
                editReturnNumModal.modal('hide');
            });
            materialGridModal.find('.btn-ok').click(function () {
                var rowId = materialGrid.jqGrid('getGridParam', 'selrow');
                if (rowId) {
                    var result = materialGrid.getRowData(rowId);
                    material.data('result', result);
                 var data = grid.getRowData(),
                 isExist = false;
                    for (var i = 0; i < data.length; i++) {
                        var row = data[i];
                        if (row.Name == result.Name && row.Brand == result.Brand
                            && row.Model == result.Model && row.Unit == result.Unit
                          ) {
                            isExist = true;
                            break;
                        }
                    }

                    if (!isExist) {
                        index++;
                        var newMaterial = {
                            MaterialId: result.Id,
                            SerialNo: result.SerialNo,
                            Name: result.Name,
                            Brand: result.Brand,
                            Model: result.Model,
                            Unit: result.Unit,
                            CostPrice: result.StockPrice
                        };
                        grid.addRowData(index, newMaterial);
                        grid.trigger("reloadGrid");
                    }

                    updateButtonStatus();
                }
                materialGridModal.modal('hide');
            });

        });
    </script>
}