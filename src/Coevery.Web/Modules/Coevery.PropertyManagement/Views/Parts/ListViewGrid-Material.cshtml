
@{
    Style.Require("jqGrid");
    Style.Require("jqGridCustom");
    Script.Require("jqGrid");
	Script.Require("jqGrid_i18n");
    Script.Require("moment");

    var gridPagerId = Model.GridId + "Pager";
    //var columns = WorkContext.Resolve<IMaterialListViewService>().GetColumns();
    //var colModel = string.Join(",", ((from c in columns select c.ToString()).ToArray()));
}

<div id="filters" class="form-inline">
    <div class="searchbox">
        <label class="lb-80" for="FilterOptions_SerialNo">@T("材料编号:")</label>
        @Html.TextBox("FilterOptions.SerialNo", null, new { @class = "text" })
    </div>
    <div class="searchbox">
        <label class="lb-80" for="FilterOptions_Name">@T("材料名称:")</label>
        @Html.TextBox("FilterOptions.Name", null, new { @class = "text" })
    </div>
    <div class="searchbox">
        <label class="lb-80" for="FilterOptions_Brand">@T("品牌:")</label>
        @Html.TextBox("FilterOptions.Brand", null, new { @class = "text" })
    </div>
    <div class="searchbox">
        <label class="lb-80" for="FilterOptions_Model">@T("规格型号:")</label>
        @Html.TextBox("FilterOptions.Model", null, new { @class = "text" })
    </div>
    <button type="submit" class="btn btn-small" id="btnFilter" name="submit.Filter" value="@T("Filter")"><i class="icos-looking-glass"></i>&nbsp;查找</button>
    <button type="reset" class="btn btn-small btnReset" id="btnReset" name="reset" value="清除">重置</button>
</div>

<div class="row-fluid">
    <table id="@Model.GridId"></table>
    <section id="@gridPagerId"></section>
</div>
@Html.AntiForgeryToken()

@using (Script.Foot()) {
    <script type="text/javascript">
    (function () {
        moment.lang('@WorkContext.CurrentCulture.ToLower()');

        function utcDateFormatter(cellvalue, options, rowObject) {
            if (cellvalue) {
                return moment(cellvalue).format('l');
            } else {
                return '';
            }
        }

        function utcDateTimeFormatter(cellvalue, options, rowObject) {
            if (cellvalue) {
                return moment(cellvalue).format('l LT');
            } else {
                return '';
            }
        }

        $.extend(jQuery.jgrid.defaults, {
            prmNames: {
                page: 'page',
                rows: 'pageSize',
                sort: 'sortBy',
                order: 'sortOrder'
            },
            datatype: 'json',
            mtype: 'POST',
            postData: {
                __RequestVerificationToken: function () {
                    var magicToken = $("input[name=__RequestVerificationToken]").first();
                    if (magicToken.length == 0) {
                        return null;
                    } // no sense in continuing if form POSTS will fail
                    return magicToken.val();
                }
            },
            viewrecords: true,
            height: '100%',
            pagerpos: 'right',
            recordpos: 'left',
            sortable: true,
            headertitles: true,
            multiselect: true,
            multiboxonly: true,
            autowidth: true,
            jsonReader: {
                page: 'page',
                total: 'totalPages',
                records: 'totalRecords',
                repeatitems: false
            }
        });

        var gridOptions = {
            url: '@Url.Action("List", "Material", new { area = "Coevery.PropertyManagement" })',
            colModel: [{ "name": "SerialNo", "index": "SerialNo", "label": "材料编号", "sortable": true },
                       { "name": "Name", "index": "Name", "label": "材料名称", "sortable": true },
                       { "name": "Brand", "index": "Brand", "label": "品牌", "sortable": true },
                       { "name": "Model", "index": "Model", "label": "规格型号", "sortable": true },
                        { "name": "Unit", "index": "Unit", "label": "单位", "sortable": true },
                        { "name": "Remark", "index": "Remark", "label": "备注", "sortable": true },
                        { "name": "Id", "hidden": true, "key": true }],
            pager: '#@gridPagerId',
            rowNum: 50,
            rowList: [50, 100, 150],
            sortname: '',
            sortorder: ''
        };

        @if (Model.GridOptions != null) {
                var json = Html.Raw(Json.Encode(Model.GridOptions));
                WriteLiteral("		$.extend(gridOptions, " + json + ");");
            }

        var grid = $('#@Model.GridId');

        grid.jqGrid(gridOptions);

        $('#btnFilter').click(function () {
            var postData = grid.jqGrid('getGridParam', 'postData');
            $('#filters :input').serializeArray().map(function (x) { postData[x.name] = x.value; });
            grid.trigger("reloadGrid");
        });

        $('#btnReset').click(function () {
            $('#filters :input').each(function(index, value) {
                $(value).val('');
            });
            $('#btnFilter').trigger('click');
        });
    })();

    </script>
}

