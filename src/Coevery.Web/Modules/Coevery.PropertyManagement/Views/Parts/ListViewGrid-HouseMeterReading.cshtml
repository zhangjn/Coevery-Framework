@{
    Style.Require("jqGrid");
    Style.Require("jqGridCustom");
    Script.Require("jqGrid");
    Script.Require("jqGrid_i18n");
    Script.Require("moment");

    var gridPagerId = Model.GridId + "Pager";
}
<style>
    .ui-datepicker-calendar { display: none; }
</style>
<div class="row-fluid" style="margin-top: 20px">
    <form action="@Url.Action("Import", "HouseMeterReading")" method="post" enctype="multipart/form-data">
        <input type="file" name="importFile" style="position: absolute; z-index: 10; opacity: 0; height: 26px;" />
        <button id="btnImportHouseMeter" type="button" style="z-index: 0" class="btn btn-small btn-primary">@T("批量导入")</button>
        <a href='@Url.Action("DownLoadTemplate", "HouseMeterReading", new { area = "Coevery.PropertyManagement" })'>下载导入数据模板</a>
    </form>
   
</div>

<div id="filters" class="form-inline">
    <div class="searchbox">
        <label class="title control-label required">数据所在月份</label>
        @Html.TextBox("FilterOptions.DateFrom", DateTime.Now.ToString("yyyy-MM"), new {@class = "text datepickerfrom"})
    </div>
    <div class="searchbox">
        <label class="title control-label required">楼盘</label>
        @Html.DropDownList("FilterOptions.ApartmentId", (List<SelectListItem>) ViewBag.apartments, new Dictionary<string, object>
        {
            {"required", ""},
            {"class", "text"},
            {"data-msg-required", "请选择楼盘！"}
        })
    </div>
    <div class="searchbox">
        <label class="title control-label required">楼宇</label>
        @Html.DropDownList("FilterOptions.BuildingId", (List<SelectListItem>) ViewBag.buildings, new Dictionary<string, object>
        {
            {"required", ""},
            {"class", "text"},
            {"data-msg-required", "请选择楼宇！"},
            {"disabled", "true"}
        })
        @*<select name="FilterOptions.BuildingId" id="FilterOptions_BuildingId"></select>*@
    </div>
    <div class="searchbox">
        <label class="title control-label required">房号</label>
        @Html.DropDownList("FilterOptions.HouseNumber", (List<SelectListItem>) ViewBag.houses, new Dictionary<string, object>
        {
            {"required", ""},
            {"class", "text"},
            {"data-msg-required", "请选择房号！"},
            {"disabled", "true"}
        })
        @*<select name="FilterOptions.HouseNumber" id="FilterOptions_HouseNumber"></select>*@
    </div>
    <button type="submit" id="btnFilter" class="btn btn-small" name="submit.Filter" value="@T("Filter")"><i class="icos-looking-glass"></i>&nbsp;查找</button>
    
</div>

<div class="row-fluid">
    <table id="@Model.GridId"></table>
    <section id="@gridPagerId"></section>
</div>
@Html.AntiForgeryToken()

@using (Script.Foot())
{
    <script type="text/javascript">
        moment.lang('@WorkContext.CurrentCulture.ToLower()');

        function utcDateFormatter(cellvalue, options, rowObject) {
            if (cellvalue) {
                return moment(cellvalue).format('l');
            } else {
                return '';
            }
        }

        function utcDateTimeFormatter(cellvalue, options, rowObject) {
            if (cellvalue) {
                return moment(cellvalue).format('l LT');
            } else {
                return '';
            }
        }

        $.extend(jQuery.jgrid.defaults, {
            prmNames: {
                page: 'page',
                rows: 'pageSize',
                sort: 'sortBy',
                order: 'sortOrder'
            },
            datatype: 'json',
            mtype: 'POST',
            postData: {
                __RequestVerificationToken: function() {
                    var magicToken = $("input[name=__RequestVerificationToken]").first();
                    if (magicToken.length == 0) {
                        return null;
                    } // no sense in continuing if form POSTS will fail
                    return magicToken.val();
                }
            },
            viewrecords: true,
            height: '100%',
            pagerpos: 'right',
            recordpos: 'left',
            sortable: true,
            headertitles: true,
            multiselect: false,
            multiboxonly: true,
            autowidth: true,
            cellEdit: true,
            cellsubmit: 'remote',
            cellurl: '@Url.Action("List", "HouseMeterReading", new {area = "Coevery.PropertyManagement"})',
            jsonReader: {
                page: 'page',
                total: 'totalPages',
                records: 'totalRecords',
                repeatitems: false
            },
            loadComplete: function () {
                //var $this = $(this), ids = $this.jqGrid('getDataIDs'), i, l = ids.length;
                //for (i = 0; i < l; i++) {
                //    $this.jqGrid('editRow', ids[i], true);
                //}
            },
            afterSaveCell: function(rowid, name, val, iRow, iCol) {
                var houseMeterReadingRowData = $('#@Model.GridId').jqGrid("getRowData", rowid);
                houseMeterReadingRowData.rowid = rowid;
                AddHouseMeterReadindData(houseMeterReadingRowData);
            }
        });

        var gridOptions = {
            url: '@Url.Action("List", "HouseMeterReading", new {area = "Coevery.PropertyManagement"})',
            colModel: [
                { "name": "HouseMeterId", "index": "HouseMeterId", "label": "房间仪表", "sortable": false, "hidden": true },
                { "name": "HouseNumber", "index": "HouseNumber", "label": "房间编号", "sortable": false },
                { "name": "HouseOwnerName", "index": "HouseOwnerName", "label": "业主", "sortable": false },
                { "name": "MeterTypeName", "index": "MeterTypeName", "label": "仪表类型", "sortable": false },
                { "name": "MeterData", "index": "MeterData", "label": "抄表读数", "sortable": true, editable: true, editrules: { number: true, required: true } },
                { "name": "Status", "index": "Status", "label": "状态", "sortable": false },
                { "name": "Remarks", "index": "Remarks", "label": "备注", "sortable": true },
                { "name": "Id", "hidden": true, "key": true }
            ],
            pager: '#@gridPagerId',
            rowNum: 50,
            rowList: [50, 100, 150],
            sortname: '',
            sortorder: ''
        };

        @if (Model.GridOptions != null)
        {
            var json = Html.Raw(Json.Encode(Model.GridOptions));
            WriteLiteral("		$.extend(gridOptions, " + json + ");");
        }

        $('#@Model.GridId').jqGrid(gridOptions);

        $('#btnFilter').click(function() {
            var postData = $('#@Model.GridId').jqGrid('getGridParam', 'postData');
            $('#filters :input').serializeArray().map(function(x) { postData[x.name] = x.value; });
            $('#@Model.GridId').trigger("reloadGrid");
        });
        var ApartmentItemId = $('#FilterOptions_ApartmentId');
        var BuildingItemId = $('#FilterOptions_BuildingId');
        var HouseNumberItemId = $('#FilterOptions_HouseNumber');
        ApartmentItemId.change(function() {
            BuildingItemId.prop("disabled", ApartmentItemId.val() == '');
            if (ApartmentItemId.val() == '') {
                BuildingItemId.empty();
                HouseNumberItemId.empty();
                HouseNumberItemId.prop("disabled", true);
                return;
            }
            getBuildingItems();
        });
        BuildingItemId.change(function() {
            HouseNumberItemId.prop("disabled", BuildingItemId.val() == '');
            if (BuildingItemId.val() == '') {
                HouseNumberItemId.empty();
                return;
            }
            getHouseNumberItems();
        });


        function getBuildingItems() {
            BuildingItemId.empty();
            HouseNumberItemId.empty();
            $.ajax({
                url: "@Url.Action("GetBuildingItems", "HouseMeterReading")",
                type: "post",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    apartmentItemId: ApartmentItemId.val()
                }),
                success: function(res) {
                    var data = eval(res);
                    BuildingItemId.append('<option></option>');
                    for (var i = 0; i < data.length; i++) {
                        BuildingItemId.append('<option value="' + data[i].Value + '">' + data[i].text + '</option>');
                    }

                },
                error: function() {
                    $.pnotify({
                        title: '错误',
                        type: 'Error',
                        text: '提交请求失败！'
                    });
                }
            });
        }

        function getHouseNumberItems() {
            HouseNumberItemId.empty();
            $.ajax({
                url: "@Url.Action("GetHouseItems", "HouseMeterReading")",
                type: "post",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    apartmentItemId: ApartmentItemId.val(),
                    buildingItemId: BuildingItemId.val()
                }),
                success: function(res) {
                    var data = eval(res);
                    HouseNumberItemId.append('<option></option>');
                    for (var i = 0; i < data.length; i++) {
                        HouseNumberItemId.append('<option value="' + data[i].Value + '">' + data[i].text + '</option>');
                    }
                },
                error: function() {
                    $.pnotify({
                        title: '错误',
                        type: 'Error',
                        text: '提交请求失败！'
                    });
                }
            });
        }


        function AddHouseMeterReadindData(houseMeterReadingRowData) {
            var date = $('#FilterOptions_DateFrom').val().trim();
            var year = date.substr(0, 4);
            var month = date.substr(5, 2);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateHoseMeterReadingData", "HouseMeterReading")',
                dataType: "json",
                contentType: 'application/json',
                data: JSON.stringify({
                    year: year,
                    month: month,
                    meterdata: houseMeterReadingRowData.MeterData,
                    houseMeterId: houseMeterReadingRowData.HouseMeterId
                }),
                success: function(res, textStatus) {
                    var data = eval(res);
                    $('#@Model.GridId').setCell(houseMeterReadingRowData.rowid, 'Status', '已录入');
                    if (data.Value == 1) {
                        $.pnotify({
                            title: '成功',
                            type: 'Success',
                            text: '录入数据成功！'
                        });
                    }
                    if (data.Value == 2) {
                        $.pnotify({
                            title: '成功',
                            type: 'Success',
                            text: '修改数据成功！'
                        });
                    }
                },
                error: function(xhr, textStatus, errorThrown) {
                    $.pnotify({
                        title: '成功',
                        type: 'Success',
                        text: '提交请求失败！'
                    });
                }
            });
        }

        $('.datepickerfrom').datepicker({
            changeMonth: true,
            changeYear: true,
            autoClose: true,
            onClose: function(selectedDate) {
                var month = $("#ui-datepicker-div .ui-datepicker-month option:selected").val(); //得到选中的月份值
                var year = $("#ui-datepicker-div .ui-datepicker-year option:selected").val(); //得到选中的年份值
                if (parseInt(month) < 9) {
                    $('#FilterOptions_DateFrom').val(year + '-0' + (parseInt(month) + 1));
                } else {
                    $('#FilterOptions_DateFrom').val(year + '-' + (parseInt(month) + 1));
                }
            },
            onChangeMonthYear: function(year, month, inst) {
                if (parseInt(month) < 10) {
                    $('#FilterOptions_DateFrom').val(year + '-0' + (parseInt(month)));
                } else {
                    $('#FilterOptions_DateFrom').val(year + '-' + (parseInt(month)));
                }

            }
        });

        var importButtons = $('input[name="importFile"]');

        importButtons.each(function () {
            var $this = $(this);
            $this.width($this.next().outerWidth());
        });

        importButtons.change(function () {
            var $this = $(this),
                val = $this.val();
            if (!val) {
                return;
            }
            if (!/\.(xls|xlsx)$/.test(val)) {
                $.pnotify({
                    title: '错误',
                    type: 'Error',
                    text: '只支持上传Excel文件！'
                });
                return;
            }
            $this.parent().submit();
            $this.val(null);
        });
    </script>
}