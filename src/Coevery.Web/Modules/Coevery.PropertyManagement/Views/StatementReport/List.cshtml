@using Coevery.PropertyManagement.Security
@using Coevery.PropertyManagement.ViewModels
@using Coevery.Utility.Extensions
@model Coevery.PropertyManagement.ViewModels.ReceiptListViewModel
@{
    Layout.Title = "收费对账明细表";
    Style.Require("jqGrid");
    Style.Require("jqGridCustom");
    Script.Require("jqGrid");
    Script.Require("jqGrid_i18n");
    Script.Require("moment");
    var gridId = "StatementReportGridId";
    var gridPagerId = gridId + "Pager";

    var expenserViewModel = new EntitySelectorViewModel
    {
        ClientId = "Filter_ExpenserId",
        ClientName = "Filter.ExpenserId",
        DisplayFieldName = "Name",
        DropdownUrl = Url.Action("OwnerDropdown", "House"),
        Label = "费用承担者",
        PopupWindowCaption = "请选择费用承担者",
        RelatedEntityName = "Customer",
        RequiredMsg = "请选择费用承担者!"
    };
    var contractViewModel = new EntitySelectorViewModel
    {
        ClientId = "Filter_ContractNumber",
        ClientName = "Filter.ContractNumber",
        DisplayFieldName = "Name",
        DropdownUrl = Url.Action("ContractDropDown", "Payment"),
        Label = "合同",
        PopupWindowCaption = "请选择合同",
        RelatedEntityName = "Contract",
        RequiredMsg = "请选择合同!"
    };//Filter_ContractIdByContract
}
<div id="filters" class="form-inline row-fluid">
    <div class="row-fluid">
        <div class="searchbox span3">
            @Display.Partial(TemplateName: "EntitySelector", Model: contractViewModel)
        </div>
        <div class="searchbox span3">
            <label class="lb-80" for="Filter_ExpenserId">@T("费用承担者:")</label>
            <select id="Filter_ExpenserId" name="Filter.ExpenserId" class="text" disabled="disabled">
                <option></option>
            </select>
        </div>
        <div class="searchbox span3 hidden">
            <label class="lb-60" for="Filter_ChargeItemId">@T("收费项目:")</label>
            <select id="Filter_ChargeItemId" name="Filter.ChargeItemId" class="text" disabled="disabled">
                <option></option>
            </select>
        </div>

    </div>
    <div class="row-fluid">
        <div class="searchbox">
            <label class="lb-60" for="Filter_BeginDate">@T("开始日期:")</label>
            <div class="input-prepend date-text" data-co-datetime-picker="date">
                <span class="add-on">
                    <i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"></i>
                </span>
                @Html.TextBox("Filter.BeginDate", null, new { @class = "date" })
            </div>
        </div>
        <div class="searchbox">
            <label class="lb-60" for="Filter_EndDate">@T("结束日期:")</label>
            <div class="input-prepend date-text" data-co-datetime-picker="date">
                <span class="add-on">
                    <i data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"></i>
                </span>
                @Html.TextBox("Filter.EndDate", null, new { @class = "date" })
            </div>
        </div>
        <div class="searchbox">
            <button id="btnFilter" class="btn btn-small"><i class="icos-looking-glass"></i>&nbsp;查找</button>
            <button id="btnReset" class="btn btn-small btnReset" name="reset">重置</button>
            <button id="btnExport" class="btn btn-small btnExport" name="reset">导出Excel</button>
        </div>
    </div>
</div>

<div class="row-fluid">
    <table id="@gridId"></table>
    <section id="@gridPagerId"></section>
</div>

@Html.AntiForgeryToken()

@using (Script.Foot())
{
    <script type="text/javascript">
        $(function () {
            var contractId = $('#Filter_ContractNumber');
            var expenserId = $('#Filter_ExpenserId');
            var chargeItemId = $('#Filter_ChargeItemId');

            contractId.change(function () {
                if (contractId.val()) {
                    //根据合同去找费用承担人列表
                    $.ajax({
                        url: '@Url.Action("GetExpenserListByContractId", "Payment")',
                        type: 'POST',
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({
                            ContractId: contractId.val()
                        }),
                        success: function (res) {
                            var data = eval(res);
                            chargeItemId.empty();
                            expenserId.empty();
                            for (var i = 0; i < data.length; i++) {
                                expenserId.append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                            }
                            expenserId.prop("disabled", false);
                            chargeItemId.prop("disabled", true);
                        },
                        error: function () {
                            $.pnotify({
                                title: '错误',
                                text: '请求失败！',
                                type: 'Error'
                            });
                        }
                    });

                } else {
                    expenserId.prop("disabled", true);
                    chargeItemId.prop("disabled", true);
                }
            });
            expenserId.change(function () {
                if (expenserId.val()) {
                    $.ajax({
                        url: '@Url.Action("ChargeItemInContract", "StatementReport")',
                        type: 'POST',
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({
                            ContractId: contractId.val(),
                            ExpenserId: expenserId.val(),
                        }),
                        success: function (res) {
                            var data = eval(res);
                            chargeItemId.empty();
                            for (var i = 0; i < data.length; i++) {
                                chargeItemId.append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                            }
                            chargeItemId.prop("disabled", false);
                        },
                        error: function () {
                            $.pnotify({
                                title: '错误',
                                text: '请求失败！',
                                type: 'Error'
                            });
                        }
                    });

                } else {
                    chargeItemId.empty();
                    chargeItemId.prop("disabled", true);
                }
            });


            //grid
            var grid = $('#@gridId');

            moment.lang('@WorkContext.CurrentCulture.ToLower()');

            function utcDateFormatter(cellvalue, options, rowObject) {
                if (cellvalue) {
                    return moment(cellvalue).format('l');
                } else {
                    return '';
                }
            }

            function utcDateTimeFormatter(cellvalue, options, rowObject) {
                if (cellvalue) {
                    return moment(cellvalue).format('l LT');
                } else {
                    return '';
                }
            }

            $.extend(jQuery.jgrid.defaults, {
                prmNames: {
                    page: 'page',
                    rows: 'pageSize',
                    sort: 'sortBy',
                    order: 'sortOrder'
                },
                datatype: 'json',
                mtype: 'POST',
                postData: {
                    __RequestVerificationToken: function () {
                        var magicToken = $("input[name=__RequestVerificationToken]").first();
                        if (magicToken.length == 0) {
                            return null;
                        } // no sense in continuing if form POSTS will fail
                        return magicToken.val();
                    }
                },
                viewrecords: true,
                height: '100%',
                pagerpos: 'right',
                recordpos: 'left',
                sortable: true,
                headertitles: true,
                multiselect: false,
                multiboxonly: false,
                autowidth: true,
                jsonReader: {
                    page: 'page',
                    total: 'totalPages',
                    records: 'totalRecords',
                    repeatitems: false
                }
            });

            var gridColModel = [
                { "name": "Date", "label": "日期", "sortable": false, formatter: "date", formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' } },
                { "name": "ChargeItemName", "label": "收费项目", "sortable": false },
                { "name": "ChargeTerm", "label": "账单期间", "sortable": false },
                { "name": "ChargeItemAmount", "label": "账单金额(元)", "sortable": false, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "ReceivedAmount", "label": "交易金额", "sortable": false, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "OwingAmount", "label": "欠费余额", "sortable": false, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } }
            ];
            var gridOptions = {
                url: '@Url.Action("List", "StatementReport", new { area = "Coevery.PropertyManagement" })',
                colModel: gridColModel,
                pager: '#@gridPagerId',
                rowNum: 50,
                rowList: [50, 100, 150],
                sortname: 'Date',
                sortorder: 'asc'
            };

            $('#@gridId').jqGrid(gridOptions);

            //过滤器
            $('#btnFilter').click(function () {
                if (!$('#Filter_ContractNumber').val()) {
                    $.pnotify({ title: '提示', text: '请选择合同！', type: 'Error' });
                    return;
                }
                if (!$('#Filter_ExpenserId').val()) {
                    $.pnotify({ title: '提示', text: '请选择费用承担人！', type: 'Error' });
                    return;
                }

                var postData = grid.jqGrid('getGridParam', 'postData');
                $('#filters :input').serializeArray().map(function (x) { postData[x.name] = x.value; });
                grid.trigger("reloadGrid");
            });

            $('#btnReset').click(function () {
                $('#filters :input').each(function (index, value) {
                    $(value).val('');
                });
                $('#btnFilter').trigger('click');
            });

            $('#btnRefresh').click(function () {
                grid.trigger('reloadGrid');
            });


            $('#btnExport').click(function () {
                var fakeFormHtmlFragment = "<form style='display: none;' method='POST' action='@Url.Action("ExportExcel")'></form>";
                var fakeForm = $(fakeFormHtmlFragment);
                $('#filters :input').serializeArray().map(function (x) {
                    fakeForm.append("<input type='hidden' name='" + x.name + "' value='" + x.value + "'>");
                });
                fakeForm.append("<input type='hidden' name='gridColumns' value='" + JSON.stringify(gridColModel) + "'>");
                fakeForm.append($("input[name=__RequestVerificationToken]").clone());
                $("body").append(fakeForm);
                fakeForm.submit();
            });
        });

    </script>
}
