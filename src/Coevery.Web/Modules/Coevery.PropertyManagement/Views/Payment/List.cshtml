@using Coevery.PropertyManagement.Security
@using Coevery.PropertyManagement.ViewModels
@using Coevery.Utility.Extensions
@model PaymentListViewModel
@{
    Layout.Title = "客户缴费";
    Style.Require("jqGrid");
    Style.Require("jqGridCustom");
    Script.Require("jqGrid");
    Script.Require("jqGrid_i18n");
    Script.Require("moment");
    var gridId = "PaymentGridId";
    var gridPagerId = gridId + "Pager";
    var expenserViewModel = new EntitySelectorViewModel
    {
        ClientId = "Filter_ExpenserId",
        ClientName = "Filter.ExpenserId",
        DisplayFieldName = "Name",
        DropdownUrl = Url.Action("OwnerDropdown", "House"),
        Label = "费用承担者",
        PopupWindowCaption = "请选择费用承担者",
        RelatedEntityName = "Customer",
        RequiredMsg = "请选择费用承担者!"
    };
    var contractViewModel = new EntitySelectorViewModel
    {
        ClientId = "Filter_ContractIdByContract",
        ClientName = "Filter.ContractIdByContract",
        DisplayFieldName = "Name",
        DropdownUrl = Url.Action("ContractDropDown", "Payment"),
        Label = "合同",
        PopupWindowCaption = "请选择合同",
        RelatedEntityName = "Contract",
        RequiredMsg = "请选择合同!"
    };//Filter_ContractIdByContract

}
<div id="filters" class="form-inline row-fluid">
    <div class="row-fluid">
        <div class="searchbox span3">
            <label class="lb-40" for="Filter_ApartmentId">@T("楼盘:")</label>
            @Html.DropDownList("Filter.ApartmentId", Model.ApartmentsList, new Dictionary<string, object> { { "class", "text" } })
        </div>
    </div>
    <div id="radioItem" class="controls searchbox span3">
        <label class="radio">
            <input id="radioItem-contract" name="radioItem" type="radio" checked="checked" />
            按合同查询
        </label>
        <label class="radio">
            <input id="radioItem-expenser" name="radioItem" type="radio" />
            按费用承担人查询
        </label>
    </div>
    <div class="searchbox span4" id="ContractIdByContract">
        @Display.Partial(TemplateName: "EntitySelector", Model: contractViewModel)
    </div>
    <div class="searchbox span3" id="ExpenserIdByContract">
        <label class="lb-80" for="Filter_ExpenserIdByContract">@T("费用承担者:")</label>
        <select id="Filter_ExpenserIdByContract" name="Filter.ExpenserIdByContract" class="text">
            <option></option>
        </select>
    </div>
    <div class="searchbox hide span4" id="ExpenserId">
        @Display.Partial(TemplateName: "EntitySelector", Model: expenserViewModel)
    </div>
    <div class="searchbox hide" id="ContractId">
        <label class="lb-40" for="Filter_ContractId">@T("合同:")</label>
        <select id="Filter_ContractId" name="Filter.ContractId" class="text">
            <option></option>
        </select>
    </div>
    <div class="searchbox">
        <button id="btnFilter" class="btn btn-small"><i class="icos-looking-glass"></i>&nbsp;查找</button>
        <button id="btnReset" class="btn btn-small btnReset" name="reset">重置</button>
    </div>
</div>


<div class="row-fluid">
    <div class="clearfix">
        <div class="btn-toolbar pull-left">
            @if (Authorizer.Authorize(Permissions.BillManage))
            {
                <button id="btnCharge" class="btn btn-small" type="button">@T("收费")</button>
                <button id="btnEdit" class="btn btn-small btn-primary hide" type="button"><i class="icon-edit"></i>&nbsp;@T("修改费用")</button>
                <button id="btnIncidental" class="btn btn-small" type="button">@T("添加临时费用")</button>
            }
        </div>
    </div>
    <table id="@gridId"></table>
    <section id="@gridPagerId"></section>
</div>


<div id="editWindow" class="form-horizontal">
    <div class="data-row clearfix">
        <div class="control control-group">
            <label class="title control-label">收费名称</label>
            <div class="controls errortips">
                <label id="ChargeItemSettingDescription" style="margin-top: 5px"></label>
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label">金额</label>
            <div class="controls errortips">
                @Html.TextBox("Amount", "")
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label">优惠金额</label>
            <div class="controls errortips">
                @Html.TextBox("Exempt", "")
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label">滞纳金</label>
            <div class="controls errortips">
                @Html.TextBox("DelayCharge", "")
            </div>
        </div>
    </div>

    <div class="data-row clearfix">
        <div class="control control-group">
            <label class="title control-label" for="BeginDate">开始时间</label>
            <div class="controls errortips">
                <div class="input-prepend date-text" data-co-datetime-picker="date">
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                    </span>
                    @Html.TextBox("BeginDate", "", new Dictionary<string, object>
                    {
                        {"class", "date"},
                        {"style", "width:180px;"},
                        {"disabled", "disabled"}
                    })
                </div>
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label" for="EndDate">结束时间</label>
            <div class="controls errortips">
                <div class="input-prepend date-text" data-co-datetime-picker="date">
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                    </span>
                    @Html.TextBox("EndDate", "", new Dictionary<string, object>
                    {
                        {"class", "date"},
                        {"style", "width:180px;"},
                        {"disabled", "disabled"}
                    })
                </div>
            </div>
        </div>
    </div>
    <div class="data-row clearfix">
        <div class="control control-group">
            <label class="title control-label" for="Notes">备注</label>
            <div class="controls">
                @Html.TextBox("Notes", "")
            </div>
        </div>
    </div>
    <div class="data-row clearfix">
        <div class="control-group">
            <div class="controls">
                <button id="btnOK" class="btn btn-small btn-primary">确定</button>
                <button id="btnCancel" class="btn btn-small">取消</button>
            </div>
        </div>
    </div>
</div>

<div id="incidentalWindow" class="form-horizontal">
    <div class="data-row clearfix">
        <div class="control control-group">
            <label class="title control-label" for="IncidentalContractId">合同</label>
            <div class="controls errortips">
                @Html.DropDownList("IncidentalContractId", Model.IncidentalContractList, new { @class = "list-text" })
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label" for="IncidentalHouseId">房间</label>
            <div class="controls errortips">
                <select id="IncidentalHouseId" class="list-text">
                    <option value=""></option>
                </select>
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label required" for="IncidentalChargeItemName">收费项目名称</label>
            <div class="controls errortips">
                @Html.TextBox("IncidentalChargeItemName", "")
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label required" for="IncidentalChargeItemSettingId">收费标准</label>
            <div class="controls">
                @Html.DropDownList("IncidentalChargeItemSettingId", Model.IncidentalChargeItemList, new { @class = "list-text" })
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label required" for="IncidentalExpenserId">费用承担者</label>
            <div class="controls">
                <select id="IncidentalExpenserId" class="list-text">
                    <option value=""></option>
                </select>
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label" for="IncidentalAmount">金额</label>
            <div class="controls errortips">
                @Html.TextBox("IncidentalAmount", "")
            </div>
        </div>
    </div>

    <div class="data-row clearfix">
        <div class="control control-group">
            <label class="title control-label" for="IncidentalBeginDate">开始时间</label>
            <div class="controls errortips">
                <div class="input-prepend date-text" data-co-datetime-picker="date">
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                    </span>
                    @Html.TextBox("IncidentalBeginDate", "", new Dictionary<string, object>
                    {
                        {"class", "date"},
                        {"style", "width:180px;"}
                    })
                </div>
            </div>
        </div>
        <div class="control control-group">
            <label class="title control-label" for="IncidentalEndDate">结束时间</label>
            <div class="controls errortips">
                <div class="input-prepend date-text" data-co-datetime-picker="date">
                    <span class="add-on">
                        <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                    </span>
                    @Html.TextBox("IncidentalEndDate", "", new Dictionary<string, object>
                    {
                        {"class", "date"},
                        {"style", "width:180px;"}
                    })
                </div>
            </div>
        </div>
    </div>
    <div class="data-row clearfix">
        <div class="control-group">
            <div class="controls">
                <button id="btnIncidentalOK" class="btn btn-small btn-primary">确定</button>
                <button id="btnIncidentalCancel" class="btn btn-small">取消</button>
            </div>
        </div>
    </div>
</div>



@Html.AntiForgeryToken()

@using (Script.Foot())
{
    <script type="text/javascript">
    $(function () {
        var contractIdByContract = $('#ContractIdByContract');
        var contractId = $('#ContractId');
        var expenserIdByContract = $('#ExpenserIdByContract');
        var expenserId = $('#ExpenserId');
        var radioContract = $('#radioItem-contract');
        var radioItemExpenser = $('#radioItem-expenser');
        contractId.hide();
        expenserId.hide();
        expenserIdByContract.hide();//默认隐藏

        radioContract.click(function () {
            //显示
            contractIdByContract.show();

            //隐藏重置数据
            contractId.hide();
            expenserId.hide();
            $('#Filter_ExpenserId').val('');
            $('#Filter_ContractId').val('');
            $('#select2-chosen-1').text('');
        });
        radioItemExpenser.click(function () {
            expenserId.show();

            contractIdByContract.hide();
            expenserIdByContract.hide();
            $('#Filter_ContractIdByContract').val('');
            $('#Filter_ExpenserIdByContract').val('');
            $('#select2-chosen-1').text('');
        });
        
        $('#Filter_ContractIdByContract').on('change',function () {
            if ($('#Filter_ContractIdByContract').val()) {
                //根据合同去找费用承担人列表
                $.ajax({
                    url: '@Url.Action("GetExpenserListByContractId", "Payment")',
                    type: 'POST',
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        ContractId: $('#Filter_ContractIdByContract').val()
                    }),
                    success: function (res) {
                        var data = eval(res);
                        $('#Filter_ExpenserIdByContract').empty();
                        for (var i = 0; i < data.length; i++) {
                            $('#Filter_ExpenserIdByContract').append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                        }
                        expenserIdByContract.show();
                    },
                    error: function () {
                        $.pnotify({
                            title: '错误',
                            text: '请求失败！',
                            type: 'Error'
                        });
                    }
                });

            } else {
                expenserIdByContract.hide();
            }
        });
        
        $('#Filter_ExpenserId').on('change',function () {
            if ($('#Filter_ExpenserId').val()) {
                //根据费用承担人去找合同列表
                $.ajax({
                    url: '@Url.Action("GetContractListByExpenserId", "Payment")',
                    type: 'POST',
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        ExpenserId: $('#Filter_ExpenserId').val()
                    }),
                    success: function (res) {
                        var data = eval(res);
                        $('#Filter_ContractId').empty();
                        for (var i = 0; i < data.length; i++) {
                            $('#Filter_ContractId').append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                        }
                        contractId.show();
                    },
                    error: function () {
                        $.pnotify({
                            title: '错误',
                            text: '请求失败！',
                            type: 'Error'
                        });
                    }
                });
            } else {
                contractId.hide();
            }
        });
        
        $('#Filter_ExpenserId').change();
        $('#Filter_ContractIdByContract').change();


        //grid
        var grid = $('#@gridId');

        moment.lang('@WorkContext.CurrentCulture.ToLower()');

        function utcDateFormatter(cellvalue, options, rowObject) {
            if (cellvalue) {
                return moment(cellvalue).format('l');
            } else {
                return '';
            }
        }

        function utcDateTimeFormatter(cellvalue, options, rowObject) {
            if (cellvalue) {
                return moment(cellvalue).format('l LT');
            } else {
                return '';
            }
        }

        $.extend(jQuery.jgrid.defaults, {
            prmNames: {
                page: 'page',
                rows: 'pageSize',
                sort: 'sortBy',
                order: 'sortOrder'
            },
            datatype: 'json',
            mtype: 'POST',
            postData: {
                __RequestVerificationToken: function () {
                    var magicToken = $("input[name=__RequestVerificationToken]").first();
                    if (magicToken.length == 0) {
                        return null;
                    } // no sense in continuing if form POSTS will fail
                    return magicToken.val();
                }
            },
            viewrecords: true,
            height: '100%',
            pagerpos: 'right',
            recordpos: 'left',
            sortable: true,
            headertitles: true,
            multiselect: true,
            multiboxonly: true,
            autowidth: true,
            jsonReader: {
                page: 'page',
                total: 'totalPages',
                records: 'totalRecords',
                repeatitems: false
            }
        });

        var gridOptions = {
            url: '@Url.Action("List", "Payment", new {area = "Coevery.PropertyManagement"})',
            colModel: [
                { name: 'Id', hidden: true },
                { name: 'ContractId', hidden: true },
                { name: 'ChargeItemSettingId', hidden: true },
                { name: 'HouseId', hidden: true },
                { "name": "ContractNumber", "label": "合同号", "sortable": true },
                { "name": "ApartmentName", "label": "楼盘", "sortable": true },
                { "name": "BuildingName", "label": "楼宇", "sortable": true },
                { "name": "HouseNumber", "label": "房间号", "sortable": true },
                { "name": "ChargeItemSettingDescription", "label": "收费描述", "sortable": true },
                { "name": "BeginDate", "label": "开始时间", "sortable": true },
                { "name": "EndDate", "label": "结束时间", "sortable": true },
                { "name": "Year", "label": "年", "sortable": true },
                { "name": "Month", "label": "月", "sortable": true },
                { "name": "Quantity", "label": "用量", "sortable": true, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "Amount", "label": "金额", "sortable": true, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "Exempt", "label": "优惠金额", "sortable": true, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "DelayCharge", "label": "滞纳金", "sortable": true, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "Total", "label": "小计", "sortable": true, formatter: "currency", formatoptions: { decimalPlaces: 2, defaultValue: '' } },
                { "name": "Status", "label": "状态", "sortable": true },
                { "name": "Notes", "label": "备注", "sortable": true }
            ],
            pager: '#@gridPagerId',
            rowNum: 50,
            rowList: [50, 100, 150],
            sortname: '',
            sortorder: ''
        };

        $('#@gridId').jqGrid(gridOptions);

        function updateButtonStatus() {
            var selectedRowIds = grid.jqGrid('getGridParam', 'selarrrow');
            $("#btnEdit").toggle(selectedRowIds.length == 1);
        }

        grid.jqGrid('setGridParam', { onSelectRow: function () { updateButtonStatus(); } });
        grid.jqGrid('setGridParam', { gridComplete: function () { updateButtonStatus(); } });

        //过滤器
        $('#btnFilter').click(function () {

            if (radioContract.get(0).checked) {
                if (!$('#Filter_ContractIdByContract').val()) {
                    $.pnotify({ title: '提示', text: '请选择合同！', type: 'Error' });
                    return;
                }
                if (!$('#Filter_ExpenserIdByContract').val()) {
                    $.pnotify({ title: '提示', text: '请选择费用承担人！', type: 'Error' });
                    return;
                }
            }
            if (radioItemExpenser.get(0).checked) {
                if (!$('#Filter_ExpenserId').val()) {
                    $.pnotify({ title: '提示', text: '请选择费用承担人！', type: 'Error' });
                    //postData['Filter.ExpenserId'] = '';
                    return;
                }
            }
            var postData = grid.jqGrid('getGridParam', 'postData');
            $('#filters :input').serializeArray().map(function (x) { postData[x.name] = x.value; });
            grid.trigger("reloadGrid");
            
        });

        $('#btnReset').click(function () {
            $('#filters :input').each(function (index, value) {
                $(value).val('');
            });
            $('#@gridId').clearGridData();
            //$('#btnFilter').trigger('click');
        });

        $('#btnRefresh').click(function () {
            grid.trigger('reloadGrid');
        });

        var btnCharge = $('#btnCharge');
        var editWindow = $('#editWindow'); //弹出编辑框

        var incidentalWindow = $('#incidentalWindow'); //弹出附加费用框

        var currentId = null;
        var onClose = function () {
            currentId = null;
            $('#editWindow input').val('');
        };
        var onClosem = function () {
            $('#incidentalWindow input').val('');
        };
        var onCloseChargeWindow = function () {
            $('#chargeWindow input').val('');
        };
        if (!editWindow.data("kendoWindow")) {
            editWindow.kendoWindow({
                width: "550px",
                title: "修改费用",
                actions: ["Close"],
                close: onClose,
                visible: false
            });
        }
        if (!incidentalWindow.data("kendoWindow")) {
            incidentalWindow.kendoWindow({
                width: "550px",
                title: "添加临时费用",
                actions: ["Close"],
                close: onClosem,
                visible: false
            });
        }

        $('#btnEdit').click(function (e) {
            e.preventDefault();
            var selectedRowIds = grid.jqGrid('getGridParam', 'selarrrow');
            if (selectedRowIds.length == 0) return;
            //弹出编辑框editWindow，先赋值再弹出
            currentId = selectedRowIds[0];
            var row = grid.getRowData(currentId);
            $('#ChargeItemSettingDescription').text(row.ChargeItemSettingDescription);
            $('#BeginDate').val(row.BeginDate);
            $('#EndDate').val(row.EndDate);
            $('#Amount').val(row.Amount);
            $('#Notes').val(row.Notes);
            $('#Exempt').val(row.Exempt);
            $('#DelayCharge').val(row.DelayCharge);
            editWindow.data('kendoWindow').title('修改费用').center().open();
        });
        $('#btnOK').click(function (e) {
            e.preventDefault();
            if ($('#Amount').val()) {
                if (isNaN($('#Amount').val())) {
                    $.pnotify({ title: '提示', text: '金额只能输入数字！', type: 'Error' });
                    return;
                }
            } else {
                $.pnotify({ title: '提示', text: '请输入缴费金额！', type: 'Error' });
                return;
            }
            if ($('#Exempt').val()) {
                if (isNaN($('#Exempt').val())) {
                    $.pnotify({ title: '提示', text: '优惠金额只能输入数字！', type: 'Error' });
                    return;
                }
            }
            if ($('#DelayCharge').val()) {
                if (isNaN($('#DelayCharge').val())) {
                    $.pnotify({ title: '提示', text: '滞纳金只能输入数字！', type: 'Error' });
                    return;
                }
            }
            //给grid赋值
            if (currentId) {

                //异步提交到后台保存，grid 还要reload一下
                var currentRow = grid.getRowData(currentId);
                $.ajax({
                    type: 'Post',
                    url: "@Url.Action("Edit", "Payment")",
                    dataType: 'json',
                    contentType: 'application/json: charset=utf-8',
                    data: JSON.stringify({
                        model: {
                            Id: currentRow.Id,
                            Amount: $('#Amount').val(),
                            Exempt: $('#Exempt').val(),
                            DelayCharge: $('#DelayCharge').val(),
                            Notes: $('#Notes').val()
                        }
                    }),
                    success: function (data, textStatus) {
                        grid.trigger("reloadGrid");

                    },
                    error: function (xhr, data, errorThrown) {
                        $.pnotify({
                            title: '保存失败',
                            text: '请检查输入数据是否符合要求！',
                            type: 'Error'
                        });
                    }
                });
                editWindow.data('kendoWindow').close();
            }
        });
        $('#btnCancel').click(function (e) {
            e.preventDefault();
            editWindow.data('kendoWindow').close();
        });



        //后台取合同里面的房间
        $('#IncidentalContractId').change(function () {
            if ($('#IncidentalContractId').val()) {
                ajaxHouseDeffer().then(function () { $('#IncidentalHouseId').change(); });
            } else {
                $('#IncidentalHouseId').val('');
                $('#IncidentalHouseId').text('');
                $('#IncidentalExpenserId').val('');
                $('#IncidentalExpenserId').text('');
            }
        });

        function ajaxHouseDeffer() {
            return $.ajax({
                url: "@Url.Action("GetHousesByContractId", "Payment")",
                type: "post",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    ContractId: $('#IncidentalContractId').val()
                }),
                success: function (res) {
                    $('#IncidentalHouseId').empty();
                    var data = eval(res);
                    for (var i = 0; i < data.length; i++) {
                        $('#IncidentalHouseId').append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                    }
                },
                error: function () {
                    $('#IncidentalHouseId').val('');
                    $('#IncidentalHouseId').text('');
                    $('#IncidentalExpenserId').val('');
                    $('#IncidentalExpenserId').text('');
                    $.pnotify({
                        title: '错误',
                        type: 'Error',
                        text: '提交请求失败！'
                    });
                }
            });
        }

        //后台取费用承担者
        $('#IncidentalHouseId').change(function () {
            if ($('#IncidentalHouseId').val()) {
                ajaxExpenserDeffer();
            } else {
                $('#IncidentalExpenserId').val('');
                $('#IncidentalExpenserId').text('');
            }
        });

        function ajaxExpenserDeffer() {
            return $.ajax({
                url: "@Url.Action("GetExpenserByHouseId", "Payment")",
                type: "post",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    ContractId: $('#IncidentalContractId').val(),
                    HouseId: $('#IncidentalHouseId').val()
                }),
                success: function (res) {
                    $('#IncidentalExpenserId').empty();
                    var data = eval(res);
                    for (var i = 0; i < data.length; i++) {
                        $('#IncidentalExpenserId').append('<option value="' + data[i].Value + '">' + data[i].Text + '</option>');
                    }
                },
                error: function () {
                    $('#IncidentalExpenserId').val('');
                    $('#IncidentalExpenserId').text('');
                    $.pnotify({
                        title: '错误',
                        type: 'Error',
                        text: '提交请求失败！'
                    });
                }
            });
        }

        $('#btnIncidental').click(function (e) {
            e.preventDefault();
            $('#IncidentalContractId').val('');
            $('#IncidentalChargeItemId').val('');
            $('#IncidentalContractId').change();
            $('#IncidentalChargeItemId').change();
            incidentalWindow.data('kendoWindow').center().open();
        });
        $('#btnIncidentalOK').click(function (e) {
            e.preventDefault();
            if (!$('#IncidentalContractId').val()) {
                $.pnotify({ title: '提示', text: '请选择合同！', type: 'Error' });
                return;
            }
            if (!$('#IncidentalHouseId').val()) {
                $.pnotify({ title: '提示', text: '请选择房间！', type: 'Error' });
                return;
            }
            if (!$('#IncidentalChargeItemName').val()) {
                $.pnotify({ title: '提示', text: '请输入收费项目名称！', type: 'Error' });
                return;
            }
            if (!$('#IncidentalChargeItemSettingId').val()) {
                $.pnotify({ title: '提示', text: '请选择收费标准！', type: 'Error' });
                return;
            }
            if (!$('#IncidentalExpenserId').val()) {
                $.pnotify({ title: '提示', text: '请选择费用承担者！', type: 'Error' });
                return;
            }
            if ($('#IncidentalAmount').val()) {
                if (isNaN($('#IncidentalAmount').val())) {
                    $.pnotify({ title: '提示', text: '金额必须为数字！', type: 'Error' });
                    return;
                }
            }
            if (!$('#IncidentalBeginDate').val()) {
                $.pnotify({ title: '提示', text: '请填写收费开始时间！', type: 'Error' });
                return;
            }
            if (!$('#IncidentalEndDate').val()) {
                $.pnotify({ title: '提示', text: '请填写收费结束时间！', type: 'Error' });
                return;
            }

            //异步提交到后台保存，grid 还要reload一下
            $.ajax({
                type: 'Post',
                url: "@Url.Action("AddTemporary", "Payment")",
                dataType: 'json',
                contentType: 'application/json: charset=utf-8',
                data: JSON.stringify({
                    model: {
                        ContractId: $('#IncidentalContractId').val(),
                        HouseId: $('#IncidentalHouseId').val(),
                        ChargeItemName: $('#IncidentalChargeItemName').val(),
                        ChargeItemSettingId: $('#IncidentalChargeItemSettingId').val(),
                        CustomerId: $('#IncidentalExpenserId').val(),
                        Amount: $('#IncidentalAmount').val(),
                        BeginDate: $('#IncidentalBeginDate').val(),
                        EndDate: $('#IncidentalEndDate').val()
                    }
                }),
                success: function(data, textStatus) {
                    grid.trigger("reloadGrid");
                },
                error: function(xhr, data, errorThrown) {
                    $.pnotify({
                        title: '添加临时费用失败',
                        text: '请检查输入数据是否符合要求！',
                        type: 'Error'
                    });
                }
            });

            incidentalWindow.data('kendoWindow').close();
        });
        $('#btnIncidentalCancel').click(function(e) {
            e.preventDefault();
            incidentalWindow.data('kendoWindow').close();
        });


        function getCustomerId() {
            if ($('#Filter_ExpenserId').val()) {
                return $('#Filter_ExpenserId').val();
            }
            if ($('#Filter_ExpenserIdByContract').val()) {
                return $('#Filter_ExpenserIdByContract').val();
            }
            return null;
        }

        function getContractId() {
            if ($('#Filter_ContractId').val()) {
                return $('#Filter_ContractId').val();
            }
            if ($('#Filter_ContractIdByContract').val()) {
                return $('#Filter_ContractIdByContract').val();
            }
            return null;
        }


        btnCharge.click(function(e) {
            e.preventDefault();
            var customerIdVal = getCustomerId();
            var contractIdVal = getContractId();
            if (!customerIdVal) {
                $.pnotify({
                    title: '提示',
                    text: '请选择费用承担人！',
                    type: 'Error'
                });
                return;
            }
            if (!contractIdVal) {
                $.pnotify({
                    title: '提示',
                    text: '请选择合同！',
                    type: 'Error'
                });
                return;
            }

            var selectedRowIds = grid.jqGrid('getGridParam', 'selarrrow');
            if (selectedRowIds.length == 0) {
                if (grid.getRowData().length > 0) {

                    window.location.href = '@Url.Action("CheckOut")' + '?expenserId=' + customerIdVal + '&contractId=' + contractIdVal + '&returnUrl=@ViewContext.RequestContext.HttpContext.Request.ToUrlString()';
                } else {
                    $.pnotify({ title: '提示', text: '没有要收费的条目！', type: 'Info' });
                }

            } else {
                var strIds =[];
                for (var index in selectedRowIds) {
                    strIds[index]= grid.getRowData(selectedRowIds[index]).Id;
                }

                var billIds = '&billIds='+strIds.join('&billIds=');

               window.location.href = '@Url.Action("CheckOut")' + '?expenserId=' + customerIdVal + '&contractId=' + contractIdVal + billIds + '&returnUrl=@ViewContext.RequestContext.HttpContext.Request.ToUrlString()';
            }
        });

    });

    </script>
}
